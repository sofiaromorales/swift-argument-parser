{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KindV0"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/argumentparsertoolinfo\/argumentinfov0\/kindv0"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.swift.ArgumentParser\/Se","doc:\/\/org.swift.ArgumentParser\/SE","doc:\/\/org.swift.ArgumentParser\/SQ","doc:\/\/org.swift.ArgumentParser\/SH","doc:\/\/org.swift.ArgumentParser\/SY"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Kind of argument."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KindV0"}],"title":"ArgumentInfoV0.KindV0","roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","externalID":"s:22ArgumentParserToolInfo0aD2V0V04KindE0O","modules":[{"name":"ArgumentParserToolInfo"}],"navigatorTitle":[{"kind":"identifier","text":"KindV0"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo","doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/flag","doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/option","doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/positional"]},{"title":"Initializers","identifiers":["doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/init(rawValue:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/Equatable-Implementations","doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/RawRepresentable-Implementations"],"generated":true}],"references":{"doc://org.swift.ArgumentParser/documentation/ArgumentParserToolInfo/ArgumentInfoV0":{"role":"symbol","title":"ArgumentInfoV0","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArgumentInfoV0"}],"abstract":[{"type":"text","text":"All information about a particular argument, including display names and"},{"type":"text","text":" "},{"type":"text","text":"options."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArgumentInfoV0"}],"url":"\/documentation\/argumentparsertoolinfo\/argumentinfov0"},"doc://org.swift.ArgumentParser/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/org.swift.ArgumentParser\/SE"},"doc://org.swift.ArgumentParser/documentation/ArgumentParserToolInfo":{"role":"collection","title":"ArgumentParserToolInfo","abstract":[],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo","kind":"symbol","type":"topic","url":"\/documentation\/argumentparsertoolinfo"},"doc://org.swift.ArgumentParser/documentation/ArgumentParserToolInfo/ArgumentInfoV0/KindV0":{"role":"symbol","title":"ArgumentInfoV0.KindV0","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KindV0"}],"abstract":[{"type":"text","text":"Kind of argument."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KindV0"}],"url":"\/documentation\/argumentparsertoolinfo\/argumentinfov0\/kindv0"},"doc://org.swift.ArgumentParser/documentation/ArgumentParserToolInfo/ArgumentInfoV0/KindV0/RawRepresentable-Implementations":{"role":"collectionGroup","title":"RawRepresentable Implementations","abstract":[],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/RawRepresentable-Implementations","kind":"article","type":"topic","url":"\/documentation\/argumentparsertoolinfo\/argumentinfov0\/kindv0\/rawrepresentable-implementations"},"doc://org.swift.ArgumentParser/documentation/ArgumentParserToolInfo/ArgumentInfoV0/KindV0/init(rawValue:)":{"role":"symbol","title":"init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/init(rawValue:)","kind":"symbol","type":"topic","url":"\/documentation\/argumentparsertoolinfo\/argumentinfov0\/kindv0\/init(rawvalue:)"},"doc://org.swift.ArgumentParser/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/org.swift.ArgumentParser\/SY"},"doc://org.swift.ArgumentParser/documentation/ArgumentParserToolInfo/ArgumentInfoV0/KindV0/flag":{"role":"symbol","title":"ArgumentInfoV0.KindV0.flag","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"flag"}],"abstract":[{"type":"text","text":"Argument specified only as a "},{"type":"codeVoice","code":"--flag"},{"type":"text","text":" on the command line."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/flag","kind":"symbol","type":"topic","url":"\/documentation\/argumentparsertoolinfo\/argumentinfov0\/kindv0\/flag"},"doc://org.swift.ArgumentParser/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/org.swift.ArgumentParser\/SQ"},"doc://org.swift.ArgumentParser/documentation/ArgumentParserToolInfo/ArgumentInfoV0/KindV0/positional":{"role":"symbol","title":"ArgumentInfoV0.KindV0.positional","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"positional"}],"abstract":[{"type":"text","text":"Argument specified as a bare value on the command line."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/positional","kind":"symbol","type":"topic","url":"\/documentation\/argumentparsertoolinfo\/argumentinfov0\/kindv0\/positional"},"doc://org.swift.ArgumentParser/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/org.swift.ArgumentParser\/SH"},"doc://org.swift.ArgumentParser/documentation/ArgumentParserToolInfo/ArgumentInfoV0/KindV0/option":{"role":"symbol","title":"ArgumentInfoV0.KindV0.option","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"option"}],"abstract":[{"type":"text","text":"Argument specified as a value prefixed by a "},{"type":"codeVoice","code":"--flag"},{"type":"text","text":" on the command line."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/option","kind":"symbol","type":"topic","url":"\/documentation\/argumentparsertoolinfo\/argumentinfov0\/kindv0\/option"},"doc://org.swift.ArgumentParser/documentation/ArgumentParserToolInfo/ArgumentInfoV0/KindV0/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParserToolInfo\/ArgumentInfoV0\/KindV0\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/argumentparsertoolinfo\/argumentinfov0\/kindv0\/equatable-implementations"},"doc://org.swift.ArgumentParser/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/org.swift.ArgumentParser\/Se"}}}