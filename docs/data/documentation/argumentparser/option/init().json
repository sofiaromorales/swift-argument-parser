{
  "abstract" : [
    {
      "text" : "This initializer works around a quirk of property wrappers, where the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "compiler will not see no-argument initializers in extensions. Explicitly",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "marking this initializer unavailable means that when ",
      "type" : "text"
    },
    {
      "code" : "Value",
      "type" : "codeVoice"
    },
    {
      "text" : " conforms to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ExpressibleByArgument",
      "type" : "codeVoice"
    },
    {
      "text" : ", that overload will be selected instead.",
      "type" : "text"
    }
  ],
  "deprecationSummary" : [
    {
      "inlineContent" : [
        {
          "text" : "A default value must be provided unless the value type conforms to ExpressibleByArgument.",
          "type" : "text"
        }
      ],
      "type" : "paragraph"
    }
  ],
  "graphRepresentation" : "",
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option\/init()"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14ArgumentParser6OptionVACyxGycfc",
    "fragments" : [
      {
        "kind" : "identifier",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "()"
      }
    ],
    "modules" : [
      {
        "name" : "ArgumentParser"
      }
    ],
    "platforms" : [

    ],
    "role" : "symbol",
    "roleHeading" : "Initializer",
    "symbolKind" : "init",
    "title" : "init()"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "init"
            },
            {
              "kind" : "text",
              "text" : "()"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "code" : [
            "@Option() var foo: String \/\/ Syntax without this initializer",
            "@Option var foo: String   \/\/ Syntax with this initializer"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option\/init(from:)",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option\/wrappedValue"
      ],
      "title" : "Infrequently Used APIs"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/argumentparser\/option\/init()"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://org.swift.ArgumentParser/documentation/ArgumentParser": {
  "abstract" : [
    {
      "text" : "Straightforward, type-safe argument parsing for Swift.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ArgumentParser",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Option": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line option.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Option"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Option"
    }
  ],
  "role" : "symbol",
  "title" : "Option",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/option"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Option/init()": {
  "abstract" : [
    {
      "text" : "This initializer works around a quirk of property wrappers, where the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "compiler will not see no-argument initializers in extensions. Explicitly",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "marking this initializer unavailable means that when ",
      "type" : "text"
    },
    {
      "code" : "Value",
      "type" : "codeVoice"
    },
    {
      "text" : " conforms to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ExpressibleByArgument",
      "type" : "codeVoice"
    },
    {
      "text" : ", that overload will be selected instead.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/option\/init()"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Option/init(from:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7DecoderP",
      "text" : "Decoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option\/init(from:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(from:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/option\/init(from:)"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Option/wrappedValue": {
  "abstract" : [
    {
      "text" : "The value presented by this property wrapper.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser6OptionV5Valuexmfp",
      "text" : "Value"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option\/wrappedValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "wrappedValue",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/option\/wrappedvalue"
}
}
}