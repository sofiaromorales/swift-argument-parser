{
  "abstract" : [
    {
      "text" : "A property wrapper that represents a positional command-line argument.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14ArgumentParser0A0V",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Argument"
      }
    ],
    "modules" : [
      {
        "name" : "ArgumentParser"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Argument"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "Argument"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@propertyWrapper"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Argument"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Value"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use the ",
              "type" : "text"
            },
            {
              "code" : "@Argument",
              "type" : "codeVoice"
            },
            {
              "text" : " wrapper to define a property of your custom command as",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "a positional argument. A ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "positional argument",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " for a command-line tool is",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "specified without a label and must appear in declaration order. ",
              "type" : "text"
            },
            {
              "code" : "@Argument",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "properties with ",
              "type" : "text"
            },
            {
              "code" : "Optional",
              "type" : "codeVoice"
            },
            {
              "text" : " type or a default value are optional for the user",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "of your command-line tool.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, the following program has two positional arguments. The ",
              "type" : "text"
            },
            {
              "code" : "name",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "argument is required, while ",
              "type" : "text"
            },
            {
              "code" : "greeting",
              "type" : "codeVoice"
            },
            {
              "text" : " is optional because it has a default",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "value.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@main",
            "struct Greet: ParsableCommand {",
            "    @Argument var name: String",
            "    @Argument var greeting: String = \"Hello\"",
            "",
            "    mutating func run() {",
            "        print(\"\\(greeting) \\(name)!\")",
            "    }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can call this program with just a name or with a name and a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "greeting. When you supply both arguments, the first argument is always",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "treated as the name, due to the order of the property declarations.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "$ greet Nadia",
            "Hello Nadia!",
            "$ greet Tamara Hi",
            "Hi Tamara!"
          ],
          "syntax" : null,
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/s23CustomStringConvertibleP",
        "doc:\/\/org.swift.ArgumentParser\/Se"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/DeclaringArguments",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/OptionGroup",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments"
      ],
      "title" : "Arguments, Options, and Flags"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(help:completion:)-4p94d",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(help:completion:transform:)-3fjtc",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(help:completion:transform:)-7yn32",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:help:completion:)",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:help:completion:transform:)"
      ],
      "title" : "Single Arguments"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(parsing:help:completion:)",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(parsing:help:completion:transform:)",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:parsing:help:completion:)",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:parsing:help:completion:transform:)",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy"
      ],
      "title" : "Array Arguments"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(from:)",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/wrappedValue"
      ],
      "title" : "Infrequently Used APIs"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init()",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(help:completion:)-6pqzn"
      ],
      "title" : "Initializers"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/CustomStringConvertible-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/argumentparser\/argument"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://org.swift.ArgumentParser/Se": {
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser": {
  "abstract" : [
    {
      "text" : "Straightforward, type-safe argument parsing for Swift.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ArgumentParser",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a positional command-line argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Argument"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Argument"
    }
  ],
  "role" : "symbol",
  "title" : "Argument",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/CustomStringConvertible-Implementations": {
  "abstract" : [

  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/CustomStringConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomStringConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/customstringconvertible-implementations"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init()": {
  "abstract" : [
    {
      "text" : "This initializer works around a quirk of property wrappers, where the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "compiler will not see no-argument initializers in extensions. Explicitly",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "marking this initializer unavailable means that when ",
      "type" : "text"
    },
    {
      "code" : "Value",
      "type" : "codeVoice"
    },
    {
      "text" : " conforms to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ExpressibleByArgument",
      "type" : "codeVoice"
    },
    {
      "text" : ", that overload will be selected instead.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init()"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(from:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7DecoderP",
      "text" : "Decoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(from:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(from:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(from:)"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(help:completion:)-4p94d": {
  "abstract" : [
    {
      "text" : "Creates an optional property that reads its value from an argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(help:completion:)-4p94d",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(help:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(help:completion:)-4p94d"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(help:completion:)-6pqzn": {
  "abstract" : [
    {
      "text" : "Creates a property with no default value.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Value",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ExpressibleByArgument",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(help:completion:)-6pqzn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(help:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(help:completion:)-6pqzn"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(help:completion:transform:)-3fjtc": {
  "abstract" : [
    {
      "text" : "Creates a property with no default value, parsing with the given closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "transform"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A0V5Valuexmfp",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(help:completion:transform:)-3fjtc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(help:completion:transform:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(help:completion:transform:)-3fjtc"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(help:completion:transform:)-7yn32": {
  "abstract" : [
    {
      "text" : "Creates an optional property that reads its value from an argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "transform"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A0V4help10completion9transformACyqd__SgGAA0A4HelpVSg_AA14CompletionKindVSgqd__SSKctcAGRszlufc1TL_qd__mfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(help:completion:transform:)-7yn32",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(help:completion:transform:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(help:completion:transform:)-7yn32"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(parsing:help:completion:)": {
  "abstract" : [
    {
      "text" : "Creates a property with no default value that reads an array from zero or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "more arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "parsing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A20ArrayParsingStrategyV",
      "text" : "ArgumentArrayParsingStrategy"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(parsing:help:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(parsing:help:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(parsing:help:completion:)"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(parsing:help:completion:transform:)": {
  "abstract" : [
    {
      "text" : "Creates a property with no default value that reads an array from zero or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "more arguments, parsing each element with the given closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "parsing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A20ArrayParsingStrategyV",
      "text" : "ArgumentArrayParsingStrategy"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "transform"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A0V7parsing4help10completion9transformACySayqd__GGAA0A20ArrayParsingStrategyV_AA0A4HelpVSgAA14CompletionKindVSgqd__SSKctcAHRszlufc1TL_qd__mfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(parsing:help:completion:transform:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(parsing:help:completion:transform:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(parsing:help:completion:transform:)"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(wrappedValue:help:completion:)": {
  "abstract" : [
    {
      "text" : "Creates a property with a default value provided by standard Swift default",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "value syntax.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Value",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ExpressibleByArgument",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A0VA2A013ExpressibleByA0RzlE5Valuexmfp",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:help:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(wrappedValue:help:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(wrappedvalue:help:completion:)"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(wrappedValue:help:completion:transform:)": {
  "abstract" : [
    {
      "text" : "Creates a property with a default value provided by standard Swift default",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "value syntax, parsing with the given closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A0V5Valuexmfp",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "transform"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A0V5Valuexmfp",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:help:completion:transform:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(wrappedValue:help:completion:transform:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(wrappedvalue:help:completion:transform:)"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(wrappedValue:parsing:help:completion:)": {
  "abstract" : [
    {
      "text" : "Creates a property that reads an array from zero or more arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sa",
      "text" : "Array"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A0V12wrappedValue7parsing4help10completionACySayqd__GGAH_AA0A20ArrayParsingStrategyVAA0A4HelpVSgAA14CompletionKindVSgtcAHRszAA013ExpressibleByA0Rd__lufc1TL_qd__mfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "parsing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A20ArrayParsingStrategyV",
      "text" : "ArgumentArrayParsingStrategy"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:parsing:help:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(wrappedValue:parsing:help:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(wrappedvalue:parsing:help:completion:)"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/init(wrappedValue:parsing:help:completion:transform:)": {
  "abstract" : [
    {
      "text" : "Creates a property that reads an array from zero or more arguments,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "parsing each element with the given closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sa",
      "text" : "Array"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A0V12wrappedValue7parsing4help10completion9transformACySayqd__GGAI_AA0A20ArrayParsingStrategyVAA0A4HelpVSgAA14CompletionKindVSgqd__SSKctcAIRszlufc1TL_qd__mfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "parsing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A20ArrayParsingStrategyV",
      "text" : "ArgumentArrayParsingStrategy"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "transform"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A0V12wrappedValue7parsing4help10completion9transformACySayqd__GGAI_AA0A20ArrayParsingStrategyVAA0A4HelpVSgAA14CompletionKindVSgqd__SSKctcAIRszlufc1TL_qd__mfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:parsing:help:completion:transform:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(wrappedValue:parsing:help:completion:transform:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/init(wrappedvalue:parsing:help:completion:transform:)"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument/wrappedValue": {
  "abstract" : [
    {
      "text" : "The value presented by this property wrapper.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A0V5Valuexmfp",
      "text" : "Value"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument\/wrappedValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "wrappedValue",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument\/wrappedvalue"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy": {
  "abstract" : [
    {
      "text" : "The strategy to use when parsing multiple values from positional arguments",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "into an array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ArgumentArrayParsingStrategy"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ArgumentArrayParsingStrategy"
    }
  ],
  "role" : "symbol",
  "title" : "ArgumentArrayParsingStrategy",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argumentarrayparsingstrategy"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/DeclaringArguments": {
  "abstract" : [
    {
      "text" : "Use the ",
      "type" : "text"
    },
    {
      "code" : "@Argument",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "@Option",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "@Flag",
      "type" : "codeVoice"
    },
    {
      "text" : " property wrappers to declare the command-line interface for your command.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/DeclaringArguments",
  "kind" : "article",
  "role" : "article",
  "title" : "Declaring Arguments, Options, and Flags",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/declaringarguments"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Flag": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line flag.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "role" : "symbol",
  "title" : "Flag",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Option": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line option.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Option"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Option"
    }
  ],
  "role" : "symbol",
  "title" : "Option",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/option"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/OptionGroup": {
  "abstract" : [
    {
      "text" : "A wrapper that transparently includes a parsable type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptionGroup"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/OptionGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptionGroup"
    }
  ],
  "role" : "symbol",
  "title" : "OptionGroup",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/optiongroup"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ParsableArguments": {
  "abstract" : [
    {
      "text" : "A type that can be parsed from a program’s command-line arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParsableArguments"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParsableArguments"
    }
  ],
  "role" : "symbol",
  "title" : "ParsableArguments",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/parsablearguments"
},
"doc://org.swift.ArgumentParser/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
}
}
}