{
  "abstract" : [
    {
      "text" : "A type that can be expressed as a command-line argument.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14ArgumentParser013ExpressibleByA0P",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ExpressibleByArgument"
      }
    ],
    "modules" : [
      {
        "name" : "ArgumentParser"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ExpressibleByArgument"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "ExpressibleByArgument"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ExpressibleByArgument"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/EnumerableFlag"
      ],
      "title" : "Custom Types"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument\/init(argument:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument\/defaultValueDescription-2zydq"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument\/allValueStrings-7hjo7",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument\/defaultCompletionKind-866se"
      ],
      "title" : "Type Properties"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/argumentparser\/expressiblebyargument"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://org.swift.ArgumentParser/documentation/ArgumentParser": {
  "abstract" : [
    {
      "text" : "Straightforward, type-safe argument parsing for Swift.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ArgumentParser",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/EnumerableFlag": {
  "abstract" : [
    {
      "text" : "A type that represents the different possible flags to be used by a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "@Flag",
      "type" : "codeVoice"
    },
    {
      "text" : " property.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EnumerableFlag"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/EnumerableFlag",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EnumerableFlag"
    }
  ],
  "role" : "symbol",
  "title" : "EnumerableFlag",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/enumerableflag"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ExpressibleByArgument": {
  "abstract" : [
    {
      "text" : "A type that can be expressed as a command-line argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpressibleByArgument"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpressibleByArgument"
    }
  ],
  "role" : "symbol",
  "title" : "ExpressibleByArgument",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/expressiblebyargument"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ExpressibleByArgument/allValueStrings-7hjo7": {
  "abstract" : [
    {
      "text" : "An array of all possible strings that can convert to a value of this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "type.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 3,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allValueStrings"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument\/allValueStrings-7hjo7",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "allValueStrings",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/expressiblebyargument\/allvaluestrings-7hjo7"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ExpressibleByArgument/defaultCompletionKind-866se": {
  "abstract" : [
    {
      "text" : "The completion kind to use for options or arguments of this type that",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "don’t explicitly declare a completion kind.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 2,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultCompletionKind"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser14CompletionKindV",
      "text" : "CompletionKind"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument\/defaultCompletionKind-866se",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "defaultCompletionKind",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/expressiblebyargument\/defaultcompletionkind-866se"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ExpressibleByArgument/defaultValueDescription-2zydq": {
  "abstract" : [
    {
      "text" : "The description of this instance to show as a default value in a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "command-line tool’s help screen.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 2,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultValueDescription"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument\/defaultValueDescription-2zydq",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "defaultValueDescription",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/expressiblebyargument\/defaultvaluedescription-2zydq"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ExpressibleByArgument/init(argument:)": {
  "abstract" : [
    {
      "text" : "Creates a new instance of this type from a command-line-specified",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "?("
    },
    {
      "kind" : "externalParam",
      "text" : "argument"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument\/init(argument:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "init(argument:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/expressiblebyargument\/init(argument:)"
}
}
}