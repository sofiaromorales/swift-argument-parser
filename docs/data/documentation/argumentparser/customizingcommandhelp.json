{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to configuring the command name and subcommands, as described in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands"},{"type":"text","text":", you can also configure a command’s help text by providing an abstract, discussion, or custom usage string."}]},{"type":"codeListing","syntax":"swift","code":["struct Repeat: ParsableCommand {","    static var configuration = CommandConfiguration(","        abstract: \"Repeats your input phrase.\",","        usage: \"\"\"","            repeat <phrase>","            repeat --count <count> <phrase>","            \"\"\",","        discussion: \"\"\"","            Prints to stdout forever, or until you halt the program.","            \"\"\")","","    @Argument(help: \"The phrase to repeat.\")","    var phrase: String","","    @Option(help: \"How many times to repeat.\")","    var count: Int?","","    mutating func run() throws {","        for _ in 0..<(count ?? 2) {","            print(phrase) ","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The customized components now appear in the generated help screen:"}]},{"type":"codeListing","syntax":null,"code":["% repeat --help","OVERVIEW: Repeats your input phrase.","","Prints to stdout forever, or until you halt the program.","","USAGE: repeat <phrase>","       repeat --count <count> <phrase>","","ARGUMENTS:","  <phrase>                The phrase to repeat.","","OPTIONS:","  -h, --help              Show help information.","","% repeat hello!","hello!","hello!","hello!","hello!","hello!","hello!","..."]},{"anchor":"Modifying-the-Help-Flag-Names","level":2,"type":"heading","text":"Modifying the Help Flag Names"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Users can see the help screen for a command by passing either the "},{"type":"codeVoice","code":"-h"},{"type":"text","text":" or the "},{"type":"codeVoice","code":"--help"},{"type":"text","text":" flag, by default. If you need to use one of those flags for another purpose, you can provide alternative names when configuring a root command."}]},{"type":"codeListing","syntax":"swift","code":["struct Example: ParsableCommand {","    static let configuration = CommandConfiguration(","        helpNames: [.long, .customShort(\"?\")])","","    @Option(name: .shortAndLong, help: \"The number of history entries to show.\")","    var historyDepth: Int","","    mutating func run() throws {","        printHistory(depth: historyDepth)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When running the command, "},{"type":"codeVoice","code":"-h"},{"type":"text","text":" matches the short name of the "},{"type":"codeVoice","code":"historyDepth"},{"type":"text","text":" property, and "},{"type":"codeVoice","code":"-?"},{"type":"text","text":" displays the help screen."}]},{"type":"codeListing","syntax":null,"code":["% example -h 3","nmap -v -sS -O 10.2.2.2","sshnuke 10.2.2.2 -rootpw=\"Z1ON0101\"","ssh 10.2.2.2 -l root","% example -?","USAGE: example --history-depth <history-depth>","","ARGUMENTS:","  <phrase>                The phrase to repeat.","","OPTIONS:","  -h, --history-depth     The number of history entries to show.","  -?, --help              Show help information."]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When not overridden, custom help names are inherited by subcommands. In this example, the parent command defines "},{"type":"codeVoice","code":"--help"},{"type":"text","text":" and "},{"type":"codeVoice","code":"-?"},{"type":"text","text":" as its help names:"}]},{"type":"codeListing","syntax":"swift","code":["struct Parent: ParsableCommand {","    static let configuration = CommandConfiguration(","        subcommands: [Child.self],","        helpNames: [.long, .customShort(\"?\")])","","    struct Child: ParsableCommand {","        @Option(name: .shortAndLong, help: \"The host the server will run on.\")","        var host: String","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"child"},{"type":"text","text":" subcommand inherits the parent’s help names, allowing the user to distinguish between the host argument ("},{"type":"codeVoice","code":"-h"},{"type":"text","text":") and help ("},{"type":"codeVoice","code":"-?"},{"type":"text","text":")."}]},{"type":"codeListing","syntax":null,"code":["% parent child -h 192.0.0.0","...","% parent child -?","USAGE: parent child --host <host>","","OPTIONS:","  -h, --host <host>       The host the server will run on.","  -?, --help              Show help information."]},{"anchor":"Hiding-Commands","level":2,"type":"heading","text":"Hiding Commands"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You may not want to show every one of your command as part of your command-line interface. To render a command invisible (but still usable), pass "},{"type":"codeVoice","code":"shouldDisplay: false"},{"type":"text","text":" to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CommandConfiguration"},{"type":"text","text":" initializer."}]},{"anchor":"Generating-Help-Text-Programmatically","level":2,"type":"heading","text":"Generating Help Text Programmatically"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The help screen is automatically shown to users when they call your command with the help flag. You can generate the same text from within your program by calling the "},{"type":"codeVoice","code":"helpMessage()"},{"type":"text","text":" method."}]},{"type":"codeListing","syntax":"swift","code":["let help = Repeat.helpMessage()","\/\/ `help` matches the output above","","let fortyColumnHelp = Repeat.helpMessage(columns: 40)","\/\/ `fortyColumnHelp` is the same help screen, but wrapped to 40 columns"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When generating help text for a subcommand, call "},{"type":"codeVoice","code":"helpMessage(for:)"},{"type":"text","text":" on the "},{"type":"codeVoice","code":"ParsableCommand"},{"type":"text","text":" type that represents the root of the command tree and pass the subcommand type as a parameter to ensure the correct display."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CustomizingCommandHelp","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Define your command’s abstract, extended discussion, or usage string, and set the flags used to invoke the help display."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Customizing Help for Commands","role":"article","modules":[{"name":"ArgumentParser"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser"],["doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser","doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand"]]},"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/GettingStarted","doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand","doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands"],"generated":true}],"references":{"doc://org.swift.ArgumentParser/documentation/ArgumentParser/GettingStarted":{"role":"article","title":"Getting Started with ArgumentParser","abstract":[{"type":"text","text":"Learn to set up and customize a simple command-line tool."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/argumentparser\/gettingstarted"},"doc://org.swift.ArgumentParser/documentation/ArgumentParser/CommandsAndSubcommands":{"role":"article","title":"Defining Commands and Subcommands","abstract":[{"type":"text","text":"Break complex command-line tools into a tree of subcommands."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands","kind":"article","type":"topic","url":"\/documentation\/argumentparser\/commandsandsubcommands"},"doc://org.swift.ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand":{"role":"symbol","title":"AsyncParsableCommand","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncParsableCommand"}],"abstract":[{"type":"text","text":"A type that can be executed asynchronously, as part of a nested tree of"},{"type":"text","text":" "},{"type":"text","text":"commands."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncParsableCommand"}],"url":"\/documentation\/argumentparser\/asyncparsablecommand"},"doc://org.swift.ArgumentParser/documentation/ArgumentParser/CommandConfiguration":{"role":"symbol","title":"CommandConfiguration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CommandConfiguration"}],"abstract":[{"type":"text","text":"The configuration for a command."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CommandConfiguration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CommandConfiguration"}],"url":"\/documentation\/argumentparser\/commandconfiguration"},"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ParsableCommand":{"role":"symbol","title":"ParsableCommand","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsableCommand"}],"abstract":[{"type":"text","text":"A type that can be executed as part of a nested tree of commands."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParsableCommand"}],"url":"\/documentation\/argumentparser\/parsablecommand"},"doc://org.swift.ArgumentParser/documentation/ArgumentParser":{"role":"collection","title":"ArgumentParser","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"}}}