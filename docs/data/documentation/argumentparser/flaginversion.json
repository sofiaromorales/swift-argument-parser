{
  "abstract" : [
    {
      "text" : "The options for converting a Boolean flag into a ",
      "type" : "text"
    },
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : "\/",
      "type" : "text"
    },
    {
      "code" : "false",
      "type" : "codeVoice"
    },
    {
      "text" : " pair.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14ArgumentParser13FlagInversionV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "FlagInversion"
      }
    ],
    "modules" : [
      {
        "name" : "ArgumentParser"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "FlagInversion"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "FlagInversion"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "FlagInversion"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/SQ",
        "doc:\/\/org.swift.ArgumentParser\/SH"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7"
      ],
      "title" : "Boolean Flags with Inversions"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/prefixedEnableDisable",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/prefixedNo"
      ],
      "title" : "Type Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/Equatable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/argumentparser\/flaginversion"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://org.swift.ArgumentParser/SH": {
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://org.swift.ArgumentParser/SQ": {
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser": {
  "abstract" : [
    {
      "text" : "Straightforward, type-safe argument parsing for Swift.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ArgumentParser",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Flag": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line flag.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "role" : "symbol",
  "title" : "Flag",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-12okg": {
  "abstract" : [
    {
      "text" : "Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Value",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Bool",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser17NameSpecificationV",
      "text" : "NameSpecification"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "inversion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser13FlagInversionV",
      "text" : "FlagInversion"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "exclusivity"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser15FlagExclusivityV",
      "text" : "FlagExclusivity"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(name:inversion:exclusivity:help:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-1h8f7": {
  "abstract" : [
    {
      "text" : "Creates a Boolean property that reads its value from the presence of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "one or more inverted flags.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Value",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Optional<Bool>",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser17NameSpecificationV",
      "text" : "NameSpecification"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "inversion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser13FlagInversionV",
      "text" : "FlagInversion"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "exclusivity"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser15FlagExclusivityV",
      "text" : "FlagExclusivity"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(name:inversion:exclusivity:help:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Flag/init(wrappedValue:name:inversion:exclusivity:help:)": {
  "abstract" : [
    {
      "text" : "Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Value",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Bool",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser17NameSpecificationV",
      "text" : "NameSpecification"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "inversion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser13FlagInversionV",
      "text" : "FlagInversion"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "exclusivity"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser15FlagExclusivityV",
      "text" : "FlagExclusivity"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(wrappedValue:name:inversion:exclusivity:help:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/FlagInversion": {
  "abstract" : [
    {
      "text" : "The options for converting a Boolean flag into a ",
      "type" : "text"
    },
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : "\/",
      "type" : "text"
    },
    {
      "code" : "false",
      "type" : "codeVoice"
    },
    {
      "text" : " pair.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FlagInversion"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FlagInversion"
    }
  ],
  "role" : "symbol",
  "title" : "FlagInversion",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flaginversion"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/FlagInversion/Equatable-Implementations": {
  "abstract" : [

  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flaginversion\/equatable-implementations"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/FlagInversion/prefixedEnableDisable": {
  "abstract" : [
    {
      "text" : "Uses matching flags with ",
      "type" : "text"
    },
    {
      "code" : "enable-",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "disable-",
      "type" : "codeVoice"
    },
    {
      "text" : " prefixes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "prefixedEnableDisable"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser13FlagInversionV",
      "text" : "FlagInversion"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/prefixedEnableDisable",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "prefixedEnableDisable",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flaginversion\/prefixedenabledisable"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/FlagInversion/prefixedNo": {
  "abstract" : [
    {
      "text" : "Adds a matching flag with a ",
      "type" : "text"
    },
    {
      "code" : "no-",
      "type" : "codeVoice"
    },
    {
      "text" : " prefix to represent ",
      "type" : "text"
    },
    {
      "code" : "false",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "prefixedNo"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser13FlagInversionV",
      "text" : "FlagInversion"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/prefixedNo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "prefixedNo",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flaginversion\/prefixedno"
}
}
}