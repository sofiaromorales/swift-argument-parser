{
  "abstract" : [
    {
      "text" : "Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg"
  },
  "kind" : "symbol",
  "metadata" : {
    "conformance" : {
      "availabilityPrefix" : [
        {
          "text" : "Available when",
          "type" : "text"
        }
      ],
      "conformancePrefix" : [
        {
          "text" : "Conforms when",
          "type" : "text"
        }
      ],
      "constraints" : [
        {
          "code" : "Value",
          "type" : "codeVoice"
        },
        {
          "text" : " is ",
          "type" : "text"
        },
        {
          "code" : "Bool",
          "type" : "codeVoice"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ]
    },
    "extendedModule" : "ArgumentParser",
    "externalID" : "s:14ArgumentParser4FlagVAASbRszlE4name9inversion11exclusivity4helpACySbGAA17NameSpecificationV_AA0C9InversionVAA0C11ExclusivityVAA0A4HelpVSgtcfc",
    "fragments" : [
      {
        "kind" : "identifier",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "name"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:14ArgumentParser17NameSpecificationV",
        "text" : "NameSpecification"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "inversion"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:14ArgumentParser13FlagInversionV",
        "text" : "FlagInversion"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "exclusivity"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:14ArgumentParser15FlagExclusivityV",
        "text" : "FlagExclusivity"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "help"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
        "text" : "ArgumentHelp"
      },
      {
        "kind" : "text",
        "text" : "?)"
      }
    ],
    "modules" : [
      {
        "name" : "ArgumentParser"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Initializer",
    "symbolKind" : "init",
    "title" : "init(name:inversion:exclusivity:help:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "init"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "name"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/NameSpecification",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:14ArgumentParser17NameSpecificationV",
              "text" : "NameSpecification"
            },
            {
              "kind" : "text",
              "text" : " = .long, "
            },
            {
              "kind" : "externalParam",
              "text" : "inversion"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:14ArgumentParser13FlagInversionV",
              "text" : "FlagInversion"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "exclusivity"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagExclusivity",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:14ArgumentParser15FlagExclusivityV",
              "text" : "FlagExclusivity"
            },
            {
              "kind" : "text",
              "text" : " = .chooseLast, "
            },
            {
              "kind" : "externalParam",
              "text" : "help"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ArgumentHelp",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
              "text" : "ArgumentHelp"
            },
            {
              "kind" : "text",
              "text" : "? = nil)"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A specification for what names are allowed for this flag.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "name"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A default value to use for this property, provided implicitly by the compiler during property wrapper initialization.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "wrappedValue"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The method for converting this flagâ€™s name into an on\/off pair.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "inversion"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The behavior to use when an on\/off pair of flags is specified.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "exclusivity"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Information about how to use this flag.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "help"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this initializer to create a Boolean flag with an on\/off pair.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "With the following declaration, for example, the user can specify either ",
              "type" : "text"
            },
            {
              "code" : "--use-https",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : "--no-use-https",
              "type" : "codeVoice"
            },
            {
              "text" : " to set the ",
              "type" : "text"
            },
            {
              "code" : "useHTTPS",
              "type" : "codeVoice"
            },
            {
              "text" : " flag to ",
              "type" : "text"
            },
            {
              "code" : "true",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : "false",
              "type" : "codeVoice"
            },
            {
              "text" : ", respectively.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@Flag(inversion: .prefixedNo)",
            "var useHTTPS: Bool"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion"
      ],
      "title" : "Boolean Flags with Inversions"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://org.swift.ArgumentParser/documentation/ArgumentParser": {
  "abstract" : [
    {
      "text" : "Straightforward, type-safe argument parsing for Swift.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ArgumentParser",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ArgumentHelp": {
  "abstract" : [
    {
      "text" : "Help information for a command-line argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ArgumentHelp"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ArgumentHelp",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ArgumentHelp"
    }
  ],
  "role" : "symbol",
  "title" : "ArgumentHelp",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argumenthelp"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Flag": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line flag.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "role" : "symbol",
  "title" : "Flag",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-12okg": {
  "abstract" : [
    {
      "text" : "Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Value",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Bool",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser17NameSpecificationV",
      "text" : "NameSpecification"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "inversion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser13FlagInversionV",
      "text" : "FlagInversion"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "exclusivity"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser15FlagExclusivityV",
      "text" : "FlagExclusivity"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(name:inversion:exclusivity:help:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-1h8f7": {
  "abstract" : [
    {
      "text" : "Creates a Boolean property that reads its value from the presence of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "one or more inverted flags.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Value",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Optional<Bool>",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser17NameSpecificationV",
      "text" : "NameSpecification"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "inversion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser13FlagInversionV",
      "text" : "FlagInversion"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "exclusivity"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser15FlagExclusivityV",
      "text" : "FlagExclusivity"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(name:inversion:exclusivity:help:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Flag/init(wrappedValue:name:inversion:exclusivity:help:)": {
  "abstract" : [
    {
      "text" : "Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Value",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Bool",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser17NameSpecificationV",
      "text" : "NameSpecification"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "inversion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser13FlagInversionV",
      "text" : "FlagInversion"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "exclusivity"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser15FlagExclusivityV",
      "text" : "FlagExclusivity"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "help"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14ArgumentParser0A4HelpV",
      "text" : "ArgumentHelp"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(wrappedValue:name:inversion:exclusivity:help:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/FlagExclusivity": {
  "abstract" : [
    {
      "text" : "The options for treating enumeration-based flags as exclusive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FlagExclusivity"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagExclusivity",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FlagExclusivity"
    }
  ],
  "role" : "symbol",
  "title" : "FlagExclusivity",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flagexclusivity"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/FlagInversion": {
  "abstract" : [
    {
      "text" : "The options for converting a Boolean flag into a ",
      "type" : "text"
    },
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : "\/",
      "type" : "text"
    },
    {
      "code" : "false",
      "type" : "codeVoice"
    },
    {
      "text" : " pair.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FlagInversion"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FlagInversion"
    }
  ],
  "role" : "symbol",
  "title" : "FlagInversion",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flaginversion"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/NameSpecification": {
  "abstract" : [
    {
      "text" : "A specification for how to represent a property as a command-line argument",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "label.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NameSpecification"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/NameSpecification",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NameSpecification"
    }
  ],
  "role" : "symbol",
  "title" : "NameSpecification",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/namespecification"
}
}
}