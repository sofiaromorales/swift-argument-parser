{
  "abstract" : [
    {
      "text" : "Straightforward, type-safe argument parsing for Swift.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "graph",
  "hierarchy" : {
    "paths" : [
      [

      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "ArgumentParser",
    "modules" : [
      {
        "name" : "ArgumentParser"
      }
    ],
    "role" : "collection",
    "roleHeading" : "Framework",
    "symbolKind" : "module",
    "title" : "ArgumentParser"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "By using ",
              "type" : "text"
            },
            {
              "code" : "ArgumentParser",
              "type" : "codeVoice"
            },
            {
              "text" : ", you can create a command-line interface tool",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "by declaring simple Swift types.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Begin by declaring a type that defines",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the information that you need to collect from the command line.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Decorate each stored property with one of ",
              "type" : "text"
            },
            {
              "code" : "ArgumentParser",
              "type" : "codeVoice"
            },
            {
              "text" : "‘s property wrappers,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "declare conformance to ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and implement your command’s logic in its ",
              "type" : "text"
            },
            {
              "code" : "run()",
              "type" : "codeVoice"
            },
            {
              "text" : " method.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "import ArgumentParser",
            "",
            "@main",
            "struct Repeat: ParsableCommand {",
            "    @Argument(help: \"The phrase to repeat.\")",
            "    var phrase: String",
            "",
            "    @Option(help: \"The number of times to repeat 'phrase'.\")",
            "    var count: Int? = nil",
            "",
            "    mutating func run() throws {",
            "        let repeatCount = count ?? 2",
            "        for _ in 0..<repeatCount {",
            "            print(phrase)",
            "        }",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "When a user executes your command,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the ",
              "type" : "text"
            },
            {
              "code" : "ArgumentParser",
              "type" : "codeVoice"
            },
            {
              "text" : " library parses the command-line arguments,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "instantiates your command type,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and then either calls your ",
              "type" : "text"
            },
            {
              "code" : "run()",
              "type" : "codeVoice"
            },
            {
              "text" : " method or exits with a useful message.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "repeat.png",
              "type" : "image"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Additional-Resources",
          "level" : 4,
          "text" : "Additional Resources",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "https:\/\/github.com\/apple\/swift-argument-parser\/",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "https:\/\/forums.swift.org\/c\/related-projects\/argumentparser\/60",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/GettingStarted",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CustomizingCommandHelp"
      ],
      "title" : "Essentials"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/DeclaringArguments",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/OptionGroup",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments"
      ],
      "title" : "Arguments, Options, and Flags"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CustomizingHelp",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ArgumentHelp",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ArgumentVisibility",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/NameSpecification"
      ],
      "title" : "Property Customization"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/EnumerableFlag"
      ],
      "title" : "Custom Types"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Validation",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ValidationError",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CleanExit",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExitCode"
      ],
      "title" : "Validation and Errors"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/InstallingCompletionScripts",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CustomizingCompletions",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CompletionKind"
      ],
      "title" : "Shell Completion Scripts"
    },
    {
      "identifiers" : [
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ManualParsing",
        "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExperimentalFeatures"
      ],
      "title" : "Advanced Topics"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/argumentparser"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://org.swift.ArgumentParser/documentation/ArgumentParser": {
  "abstract" : [
    {
      "text" : "Straightforward, type-safe argument parsing for Swift.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ArgumentParser",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Argument": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a positional command-line argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Argument"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Argument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Argument"
    }
  ],
  "role" : "symbol",
  "title" : "Argument",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ArgumentHelp": {
  "abstract" : [
    {
      "text" : "Help information for a command-line argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ArgumentHelp"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ArgumentHelp",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ArgumentHelp"
    }
  ],
  "role" : "symbol",
  "title" : "ArgumentHelp",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argumenthelp"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ArgumentVisibility": {
  "abstract" : [
    {
      "text" : "Visibility level of an argument’s help.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ArgumentVisibility"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ArgumentVisibility",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ArgumentVisibility"
    }
  ],
  "role" : "symbol",
  "title" : "ArgumentVisibility",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argumentvisibility"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand": {
  "abstract" : [
    {
      "text" : "A type that can be executed asynchronously, as part of a nested tree of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "commands.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncParsableCommand"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncParsableCommand"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncParsableCommand",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/asyncparsablecommand"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/CleanExit": {
  "abstract" : [
    {
      "text" : "An error type that represents a clean (i.e. non-error state) exit of the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "utility.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CleanExit"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CleanExit",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CleanExit"
    }
  ],
  "role" : "symbol",
  "title" : "CleanExit",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/cleanexit"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/CommandsAndSubcommands": {
  "abstract" : [
    {
      "text" : "Break complex command-line tools into a tree of subcommands.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands",
  "kind" : "article",
  "role" : "article",
  "title" : "Defining Commands and Subcommands",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/commandsandsubcommands"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/CompletionKind": {
  "abstract" : [
    {
      "text" : "The type of completion to use for an argument or option.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CompletionKind"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CompletionKind",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CompletionKind"
    }
  ],
  "role" : "symbol",
  "title" : "CompletionKind",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/completionkind"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/CustomizingCommandHelp": {
  "abstract" : [
    {
      "text" : "Define your command’s abstract, extended discussion, or usage string, and set the flags used to invoke the help display.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CustomizingCommandHelp",
  "kind" : "article",
  "role" : "article",
  "title" : "Customizing Help for Commands",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/customizingcommandhelp"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/CustomizingCompletions": {
  "abstract" : [
    {
      "text" : "Provide custom shell completions for your command-line tool’s arguments and options.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CustomizingCompletions",
  "kind" : "article",
  "role" : "article",
  "title" : "Customizing Completions",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/customizingcompletions"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/CustomizingHelp": {
  "abstract" : [
    {
      "text" : "Support your users (and yourself) by providing rich help for arguments, options, and flags.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/CustomizingHelp",
  "kind" : "article",
  "role" : "article",
  "title" : "Customizing Help",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/customizinghelp"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/DeclaringArguments": {
  "abstract" : [
    {
      "text" : "Use the ",
      "type" : "text"
    },
    {
      "code" : "@Argument",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "@Option",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "@Flag",
      "type" : "codeVoice"
    },
    {
      "text" : " property wrappers to declare the command-line interface for your command.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/DeclaringArguments",
  "kind" : "article",
  "role" : "article",
  "title" : "Declaring Arguments, Options, and Flags",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/declaringarguments"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/EnumerableFlag": {
  "abstract" : [
    {
      "text" : "A type that represents the different possible flags to be used by a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "@Flag",
      "type" : "codeVoice"
    },
    {
      "text" : " property.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EnumerableFlag"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/EnumerableFlag",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EnumerableFlag"
    }
  ],
  "role" : "symbol",
  "title" : "EnumerableFlag",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/enumerableflag"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ExitCode": {
  "abstract" : [
    {
      "text" : "An error type that only includes an exit code.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExitCode"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExitCode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExitCode"
    }
  ],
  "role" : "symbol",
  "title" : "ExitCode",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/exitcode"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ExperimentalFeatures": {
  "abstract" : [
    {
      "text" : "Learn about ArgumentParser’s experimental features.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExperimentalFeatures",
  "kind" : "article",
  "role" : "article",
  "title" : "Experimental Features",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/experimentalfeatures"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ExpressibleByArgument": {
  "abstract" : [
    {
      "text" : "A type that can be expressed as a command-line argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpressibleByArgument"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ExpressibleByArgument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpressibleByArgument"
    }
  ],
  "role" : "symbol",
  "title" : "ExpressibleByArgument",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/expressiblebyargument"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Flag": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line flag.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Flag",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "role" : "symbol",
  "title" : "Flag",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/GettingStarted": {
  "abstract" : [
    {
      "text" : "Learn to set up and customize a simple command-line tool.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/GettingStarted",
  "kind" : "article",
  "role" : "article",
  "title" : "Getting Started with ArgumentParser",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/gettingstarted"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/InstallingCompletionScripts": {
  "abstract" : [
    {
      "text" : "Install shell completion scripts generated by your command-line tool.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/InstallingCompletionScripts",
  "kind" : "article",
  "role" : "article",
  "title" : "Generating and Installing Completion Scripts",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/installingcompletionscripts"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ManualParsing": {
  "abstract" : [
    {
      "text" : "Provide your own array of command-line inputs or work directly with parsed command-line arguments.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ManualParsing",
  "kind" : "article",
  "role" : "article",
  "title" : "Manual Parsing and Testing",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/manualparsing"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/NameSpecification": {
  "abstract" : [
    {
      "text" : "A specification for how to represent a property as a command-line argument",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "label.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NameSpecification"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/NameSpecification",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NameSpecification"
    }
  ],
  "role" : "symbol",
  "title" : "NameSpecification",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/namespecification"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Option": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line option.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Option"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Option",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Option"
    }
  ],
  "role" : "symbol",
  "title" : "Option",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/option"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/OptionGroup": {
  "abstract" : [
    {
      "text" : "A wrapper that transparently includes a parsable type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptionGroup"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/OptionGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptionGroup"
    }
  ],
  "role" : "symbol",
  "title" : "OptionGroup",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/optiongroup"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ParsableArguments": {
  "abstract" : [
    {
      "text" : "A type that can be parsed from a program’s command-line arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParsableArguments"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParsableArguments"
    }
  ],
  "role" : "symbol",
  "title" : "ParsableArguments",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/parsablearguments"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ParsableCommand": {
  "abstract" : [
    {
      "text" : "A type that can be executed as part of a nested tree of commands.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParsableCommand"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParsableCommand"
    }
  ],
  "role" : "symbol",
  "title" : "ParsableCommand",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/parsablecommand"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/Validation": {
  "abstract" : [
    {
      "text" : "Provide helpful feedback to users when things go wrong.",
      "type" : "text"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/Validation",
  "kind" : "article",
  "role" : "article",
  "title" : "Providing Custom Validation",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/validation"
},
"doc://org.swift.ArgumentParser/documentation/ArgumentParser/ValidationError": {
  "abstract" : [
    {
      "text" : "An error type that is presented to the user as an error with parsing their",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "command-line input.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ValidationError"
    }
  ],
  "graphRepresentation" : "",
  "identifier" : "doc:\/\/org.swift.ArgumentParser\/documentation\/ArgumentParser\/ValidationError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ValidationError"
    }
  ],
  "role" : "symbol",
  "title" : "ValidationError",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/validationerror"
},
"https://forums.swift.org/c/related-projects/argumentparser/60": {
  "identifier" : "https:\/\/forums.swift.org\/c\/related-projects\/argumentparser\/60",
  "title" : "ArgumentParser on the Swift Forums",
  "titleInlineContent" : [
    {
      "code" : "ArgumentParser",
      "type" : "codeVoice"
    },
    {
      "text" : " on the Swift Forums",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/forums.swift.org\/c\/related-projects\/argumentparser\/60"
},
"https://github.com/apple/swift-argument-parser/": {
  "identifier" : "https:\/\/github.com\/apple\/swift-argument-parser\/",
  "title" : "ArgumentParser on GitHub",
  "titleInlineContent" : [
    {
      "code" : "ArgumentParser",
      "type" : "codeVoice"
    },
    {
      "text" : " on GitHub",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/apple\/swift-argument-parser\/"
},
"repeat.png": {
  "alt" : "The output of the Repeat command, declared above.",
  "identifier" : "repeat.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/repeat.png"
    }
  ]
}
}
}